affinity: {}
configuration:
  server:
    basePath: ''
    rewriteBasePath: false
configurationCM: ''
containerPort: 5601
elasticsearch:
  hosts:
    - elasticsearch-master
  port: '9200'
  security:
    auth:
      enabled: false
      existingSecret: ''
      kibanaPassword: ''
      kibanaUsername: elastic
    tls:
      enabled: false
      existingSecret: ''
      passwordsSecret: ''
      truststorePassword: ''
      usePemCerts: false
      verificationMode: full
extraConfiguration: {}
extraDeploy: []
extraEnvVars: []
extraEnvVarsCM: ''
extraEnvVarsSecret: ''
extraVolumeMounts: []
extraVolumes: []
forceInitScripts: false
fullnameOverride: ''
global:
  imagePullSecrets: []
  imageRegistry: ''
  storageClass: ''
hostAliases: []
image:
  pullPolicy: IfNotPresent
  pullSecrets: []
  registry: docker.io
  repository: bitnami/kibana
  tag: 7.17.0-debian-10-r18
ingress:
  annotations: {}
  apiVersion: ''
  enabled: false
  extraHosts: []
  extraPaths: []
  extraTls: []
  hostname: kibana.local
  ingressClassName: ''
  path: /
  pathType: ImplementationSpecific
  secrets: []
  selfSigned: false
  tls: false
initContainers: []
initScriptsCM: ''
initScriptsSecret: ''
kubeVersion: ''
livenessProbe:
  enabled: true
  failureThreshold: 6
  initialDelaySeconds: 120
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 5
metrics:
  enabled: false
  service:
    annotations:
      prometheus.io/path: _prometheus/metrics
      prometheus.io/port: '80'
      prometheus.io/scrape: 'true'
  serviceMonitor:
    enabled: false
    interval: ''
    namespace: ''
    scrapeTimeout: ''
    selector: {}
nameOverride: ''
nodeAffinityPreset:
  key: ''
  type: ''
  values: []
nodeSelector: {}
persistence:
  accessMode: ReadWriteOnce
  enabled: true
  existingClaim: ''
  size: 10Gi
  storageClass: ''
plugins: []
podAffinityPreset: ''
podAnnotations: {}
podAntiAffinityPreset: soft
podLabels: {}
readinessProbe:
  enabled: true
  failureThreshold: 6
  initialDelaySeconds: 30
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 5
replicaCount: 1
resources:
  limits: {}
  requests: {}
savedObjects:
  configmap: ''
  urls: []
schedulerName: ''
securityContext:
  enabled: true
  fsGroup: 1001
  runAsNonRoot: true
  runAsUser: 1001
service:
  annotations: {}
  externalTrafficPolicy: Cluster
  extraPorts: []
  labels: {}
  loadBalancerIP: ''
  nodePort: ''
  port: 5601
  type: LoadBalancer
serviceAccount:
  annotations: {}
  create: true
  name: ''
sidecars: []
tls:
  autoGenerated: false
  enabled: false
  existingSecret: ''
  keyPassword: ''
  keystorePassword: ''
  passwordsSecret: ''
  usePemCerts: false
tolerations: []
updateStrategy:
  type: RollingUpdate
volumePermissions:
  enabled: false
  image:
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: bitnami/bitnami-shell
    tag: 10-debian-10-r349
  resources: {}
